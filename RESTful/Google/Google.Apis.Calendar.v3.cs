//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// The majority of this file was sourced from http://code.google.com/p/google-api-dotnet-client/source/browse/Current/Generated/Source/Google.Apis.Calendar.v3.cs?repo=contrib

// NOTE(jsd): This section was manually copied from the Google Api source code:
namespace Google.Apis.Requests
{
    public class SingleError
    {
        public string Domain { get; set; }
        public string Location { get; set; }
        public string LocationType { get; set; }
        public string Message { get; set; }
        public string Reason { get; set; }
    }

    public class RequestError
    {
        public int Code { get; set; }
        public System.Collections.Generic.IList<SingleError> Errors { get; set; }
        public string Message { get; set; }
    }

    public interface IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonProperty("error")]
        RequestError Error { get; set; }
        string ETag { get; set; }
    }
}

// NOTE(jsd): This section is verbatim from the generated source code.
namespace Google.Apis.Calendar.v3.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;

    public class Acl : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<AclRule> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>ETag of the collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of rules on the access control list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<AclRule> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Type of the collection (&quot;calendar#acl&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token used to access the next page of this result. Omitted if no further results are available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class AclRule : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private string _role;
        
        private AclRule.ScopeData _scope;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Identifier of the ACL rule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#aclRule&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The role assigned to the scope. Possible values are:  
        ///- &quot;none&quot; - Provides no access. 
        ///- &quot;freeBusyReader&quot; - Provides read access to free/busy information. 
        ///- &quot;reader&quot; - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
        ///- &quot;writer&quot; - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
        ///- &quot;owner&quot; - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role {
            get {
                return this._role;
            }
            set {
                this._role = value;
            }
        }
        
        /// <summary>The scope of the rule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scope")]
        public virtual AclRule.ScopeData Scope {
            get {
                return this._scope;
            }
            set {
                this._scope = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
        
        /// <summary>The scope of the rule.</summary>
        public class ScopeData {
            
            private string _type;
            
            private string _value;
            
            /// <summary>The type of the scope. Possible values are:  
            ///- &quot;default&quot; - The public scope. This is the default value. 
            ///- &quot;user&quot; - Limits the scope to a single user. 
            ///- &quot;group&quot; - Limits the scope to a group. 
            ///- &quot;domain&quot; - Limits the scope to a domain.  Note: The permissions granted to the &quot;default&quot;, or public, scope apply to any user, authenticated or not.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            /// <summary>The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type &quot;default&quot;.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value {
                get {
                    return this._value;
                }
                set {
                    this._value = value;
                }
            }
        }
    }
    
    public class Calendar : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _description;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private string _location;
        
        private string _summary;
        
        private string _timeZone;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>Description of the calendar. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Identifier of the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#calendar&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Geographic location of the calendar as free-form text. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>Title of the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary {
            get {
                return this._summary;
            }
            set {
                this._summary = value;
            }
        }
        
        /// <summary>The time zone of the calendar. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone {
            get {
                return this._timeZone;
            }
            set {
                this._timeZone = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class CalendarList : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<CalendarListEntry> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>ETag of the collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Calendars that are present on the user&apos;s calendar list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<CalendarListEntry> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Type of the collection (&quot;calendar#calendarList&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token used to access the next page of this result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class CalendarListEntry : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _accessRole;
        
        private string _colorId;
        
        private System.Collections.Generic.IList<EventReminder> _defaultReminders;
        
        private string _description;
        
        private string _etag;
        
        private System.Nullable<bool> _hidden;
        
        private string _id;
        
        private string _kind;
        
        private string _location;
        
        private System.Nullable<bool> _selected;
        
        private string _summary;
        
        private string _summaryOverride;
        
        private string _timeZone;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  
        ///- &quot;freeBusyReader&quot; - Provides read access to free/busy information. 
        ///- &quot;reader&quot; - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
        ///- &quot;writer&quot; - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
        ///- &quot;owner&quot; - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessRole")]
        public virtual string AccessRole {
            get {
                return this._accessRole;
            }
            set {
                this._accessRole = value;
            }
        }
        
        /// <summary>The color of the calendar. This is an ID referring to an entry in the &quot;calendar&quot; section of the colors definition (see the &quot;colors&quot; endpoint). Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("colorId")]
        public virtual string ColorId {
            get {
                return this._colorId;
            }
            set {
                this._colorId = value;
            }
        }
        
        /// <summary>The default reminders that the authenticated user has for this calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultReminders")]
        public virtual System.Collections.Generic.IList<EventReminder> DefaultReminders {
            get {
                return this._defaultReminders;
            }
            set {
                this._defaultReminders = value;
            }
        }
        
        /// <summary>Description of the calendar. Optional. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Whether the calendar has been hidden from the list. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hidden")]
        public virtual System.Nullable<bool> Hidden {
            get {
                return this._hidden;
            }
            set {
                this._hidden = value;
            }
        }
        
        /// <summary>Identifier of the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#calendarListEntry&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Geographic location of the calendar as free-form text. Optional. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>Whether the calendar content shows up in the calendar UI. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selected")]
        public virtual System.Nullable<bool> Selected {
            get {
                return this._selected;
            }
            set {
                this._selected = value;
            }
        }
        
        /// <summary>Title of the calendar. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary {
            get {
                return this._summary;
            }
            set {
                this._summary = value;
            }
        }
        
        /// <summary>The summary that the authenticated user has set for this calendar. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryOverride")]
        public virtual string SummaryOverride {
            get {
                return this._summaryOverride;
            }
            set {
                this._summaryOverride = value;
            }
        }
        
        /// <summary>The time zone of the calendar. Optional. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone {
            get {
                return this._timeZone;
            }
            set {
                this._timeZone = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class ColorDefinition {
        
        private string _background;
        
        private string _foreground;
        
        /// <summary>The background color associated with this color definition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("background")]
        public virtual string Background {
            get {
                return this._background;
            }
            set {
                this._background = value;
            }
        }
        
        /// <summary>The foreground color that can be used to write on top of a background with &apos;background&apos; color.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("foreground")]
        public virtual string Foreground {
            get {
                return this._foreground;
            }
            set {
                this._foreground = value;
            }
        }
    }
    
    public class Colors : Google.Apis.Requests.IDirectResponseSchema {
        
        private Colors.CalendarData _calendar;
        
        private Colors.EventData _event;
        
        private string _kind;
        
        private string _updated;
        
        private Google.Apis.Requests.RequestError _Error;
        
        private string _ETag;
        
        /// <summary>Palette of calendar colors, mapping from the color ID to its definition. An &apos;calendarListEntry&apos; resource refers to one of these color IDs in its &apos;color&apos; field. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("calendar")]
        public virtual Colors.CalendarData Calendar {
            get {
                return this._calendar;
            }
            set {
                this._calendar = value;
            }
        }
        
        /// <summary>Palette of event colors, mapping from the color ID to its definition. An &apos;event&apos; resource may refer to one of these color IDs in its &apos;color&apos; field. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual Colors.EventData Event {
            get {
                return this._event;
            }
            set {
                this._event = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#colors&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this._updated;
            }
            set {
                this._updated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
        
        /// <summary>Palette of calendar colors, mapping from the color ID to its definition. An &apos;calendarListEntry&apos; resource refers to one of these color IDs in its &apos;color&apos; field. Read-only.</summary>
        public class CalendarData : System.Collections.Generic.Dictionary<string, ColorDefinition> {
        }
        
        /// <summary>Palette of event colors, mapping from the color ID to its definition. An &apos;event&apos; resource may refer to one of these color IDs in its &apos;color&apos; field. Read-only.</summary>
        public class EventData : System.Collections.Generic.Dictionary<string, ColorDefinition> {
        }
    }
    
    public class Error {
        
        private string _domain;
        
        private string _reason;
        
        /// <summary>Domain, or broad category, of the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("domain")]
        public virtual string Domain {
            get {
                return this._domain;
            }
            set {
                this._domain = value;
            }
        }
        
        /// <summary>Specific reason for the error. Some of the possible values are:  
        ///- &quot;groupTooBig&quot; - The group of users requested is too large for a single query. 
        ///- &quot;tooManyCalendarsRequested&quot; - The number of calendars requested is too large for a single query. 
        ///- &quot;notFound&quot; - The requested resource was not found. 
        ///- &quot;internalError&quot; - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reason")]
        public virtual string Reason {
            get {
                return this._reason;
            }
            set {
                this._reason = value;
            }
        }
    }
    
    public class Event : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Nullable<bool> _anyoneCanAddSelf;
        
        private System.Collections.Generic.IList<EventAttendee> _attendees;
        
        private System.Nullable<bool> _attendeesOmitted;
        
        private string _colorId;
        
        private string _created;
        
        private Event.CreatorData _creator;
        
        private string _description;
        
        private EventDateTime _end;
        
        private System.Nullable<bool> _endTimeUnspecified;
        
        private string _etag;
        
        private Event.ExtendedPropertiesData _extendedProperties;
        
        private Event.GadgetData _gadget;
        
        private System.Nullable<bool> _guestsCanInviteOthers;
        
        private System.Nullable<bool> _guestsCanModify;
        
        private System.Nullable<bool> _guestsCanSeeOtherGuests;
        
        private string _htmlLink;
        
        private string _iCalUID;
        
        private string _id;
        
        private string _kind;
        
        private string _location;
        
        private System.Nullable<bool> _locked;
        
        private Event.OrganizerData _organizer;
        
        private EventDateTime _originalStartTime;
        
        private System.Nullable<bool> _privateCopy;
        
        private System.Collections.Generic.IList<string> _recurrence;
        
        private string _recurringEventId;
        
        private Event.RemindersData _reminders;
        
        private System.Nullable<long> _sequence;
        
        private EventDateTime _start;
        
        private string _status;
        
        private string _summary;
        
        private string _transparency;
        
        private string _updated;
        
        private string _visibility;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>Whether anyone can invite themselves to the event. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("anyoneCanAddSelf")]
        public virtual System.Nullable<bool> AnyoneCanAddSelf {
            get {
                return this._anyoneCanAddSelf;
            }
            set {
                this._anyoneCanAddSelf = value;
            }
        }
        
        /// <summary>The attendees of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attendees")]
        public virtual System.Collections.Generic.IList<EventAttendee> Attendees {
            get {
                return this._attendees;
            }
            set {
                this._attendees = value;
            }
        }
        
        /// <summary>Whether attendees have been omitted from the event&apos;s representation. When retrieving an event, this is due to a restriction specified by the &apos;maxAttendee&apos; query parameter. When updating an event, this can be used to only update the participant&apos;s response. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attendeesOmitted")]
        public virtual System.Nullable<bool> AttendeesOmitted {
            get {
                return this._attendeesOmitted;
            }
            set {
                this._attendeesOmitted = value;
            }
        }
        
        /// <summary>The color of the event. This is an ID referring to an entry in the &quot;event&quot; section of the colors definition (see the &quot;colors&quot; endpoint). Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("colorId")]
        public virtual string ColorId {
            get {
                return this._colorId;
            }
            set {
                this._colorId = value;
            }
        }
        
        /// <summary>Creation time of the event (as a RFC 3339 timestamp). Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("created")]
        public virtual string Created {
            get {
                return this._created;
            }
            set {
                this._created = value;
            }
        }
        
        /// <summary>The creator of the event. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creator")]
        public virtual Event.CreatorData Creator {
            get {
                return this._creator;
            }
            set {
                this._creator = value;
            }
        }
        
        /// <summary>Description of the event. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual EventDateTime End {
            get {
                return this._end;
            }
            set {
                this._end = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("endTimeUnspecified")]
        public virtual System.Nullable<bool> EndTimeUnspecified {
            get {
                return this._endTimeUnspecified;
            }
            set {
                this._endTimeUnspecified = value;
            }
        }
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Extended properties of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extendedProperties")]
        public virtual Event.ExtendedPropertiesData ExtendedProperties {
            get {
                return this._extendedProperties;
            }
            set {
                this._extendedProperties = value;
            }
        }
        
        /// <summary>A gadget that extends this event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gadget")]
        public virtual Event.GadgetData Gadget {
            get {
                return this._gadget;
            }
            set {
                this._gadget = value;
            }
        }
        
        /// <summary>Whether attendees other than the organizer can invite others to the event. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guestsCanInviteOthers")]
        public virtual System.Nullable<bool> GuestsCanInviteOthers {
            get {
                return this._guestsCanInviteOthers;
            }
            set {
                this._guestsCanInviteOthers = value;
            }
        }
        
        /// <summary>Whether attendees other than the organizer can modify the event. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guestsCanModify")]
        public virtual System.Nullable<bool> GuestsCanModify {
            get {
                return this._guestsCanModify;
            }
            set {
                this._guestsCanModify = value;
            }
        }
        
        /// <summary>Whether attendees other than the organizer can see who the event&apos;s attendees are. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guestsCanSeeOtherGuests")]
        public virtual System.Nullable<bool> GuestsCanSeeOtherGuests {
            get {
                return this._guestsCanSeeOtherGuests;
            }
            set {
                this._guestsCanSeeOtherGuests = value;
            }
        }
        
        /// <summary>An absolute link to this event in the Google Calendar Web UI. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("htmlLink")]
        public virtual string HtmlLink {
            get {
                return this._htmlLink;
            }
            set {
                this._htmlLink = value;
            }
        }
        
        /// <summary>Event ID in the iCalendar format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iCalUID")]
        public virtual string ICalUID {
            get {
                return this._iCalUID;
            }
            set {
                this._iCalUID = value;
            }
        }
        
        /// <summary>Identifier of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#event&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Geographic location of the event as free-form text. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>Whether this is a locked event copy where no changes can be made to the main event fields &quot;summary&quot;, &quot;description&quot;, &quot;location&quot;, &quot;start&quot;, &quot;end&quot; or &quot;recurrence&quot;. The default is False. Read-Only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locked")]
        public virtual System.Nullable<bool> Locked {
            get {
                return this._locked;
            }
            set {
                this._locked = value;
            }
        }
        
        /// <summary>The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in &apos;attendees&apos; with the &apos;organizer&apos; field set to True. To change the organizer, use the &quot;move&quot; operation. Read-only, except when importing an event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizer")]
        public virtual Event.OrganizerData Organizer {
            get {
                return this._organizer;
            }
            set {
                this._organizer = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("originalStartTime")]
        public virtual EventDateTime OriginalStartTime {
            get {
                return this._originalStartTime;
            }
            set {
                this._originalStartTime = value;
            }
        }
        
        /// <summary>Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privateCopy")]
        public virtual System.Nullable<bool> PrivateCopy {
            get {
                return this._privateCopy;
            }
            set {
                this._privateCopy = value;
            }
        }
        
        /// <summary>List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recurrence")]
        public virtual System.Collections.Generic.IList<string> Recurrence {
            get {
                return this._recurrence;
            }
            set {
                this._recurrence = value;
            }
        }
        
        /// <summary>For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recurringEventId")]
        public virtual string RecurringEventId {
            get {
                return this._recurringEventId;
            }
            set {
                this._recurringEventId = value;
            }
        }
        
        /// <summary>Information about the event&apos;s reminders for the authenticated user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reminders")]
        public virtual Event.RemindersData Reminders {
            get {
                return this._reminders;
            }
            set {
                this._reminders = value;
            }
        }
        
        /// <summary>Sequence number as per iCalendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sequence")]
        public virtual System.Nullable<long> Sequence {
            get {
                return this._sequence;
            }
            set {
                this._sequence = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual EventDateTime Start {
            get {
                return this._start;
            }
            set {
                this._start = value;
            }
        }
        
        /// <summary>Status of the event. Optional. Possible values are:  
        ///- &quot;confirmed&quot; - The event is confirmed. This is the default status. 
        ///- &quot;tentative&quot; - The event is tentatively confirmed. 
        ///- &quot;cancelled&quot; - The event is cancelled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>Title of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary {
            get {
                return this._summary;
            }
            set {
                this._summary = value;
            }
        }
        
        /// <summary>Whether the event blocks time on the calendar. Optional. Possible values are:  
        ///- &quot;opaque&quot; - The event blocks time on the calendar. This is the default value. 
        ///- &quot;transparent&quot; - The event does not block time on the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transparency")]
        public virtual string Transparency {
            get {
                return this._transparency;
            }
            set {
                this._transparency = value;
            }
        }
        
        /// <summary>Last modification time of the event (as a RFC 3339 timestamp). Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this._updated;
            }
            set {
                this._updated = value;
            }
        }
        
        /// <summary>Visibility of the event. Optional. Possible values are:  
        ///- &quot;default&quot; - Uses the default visibility for events on the calendar. This is the default value. 
        ///- &quot;public&quot; - The event is public and event details are visible to all readers of the calendar. 
        ///- &quot;private&quot; - The event is private and only event attendees may view event details. 
        ///- &quot;confidential&quot; - The event is private. This value is provided for compatibility reasons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string Visibility {
            get {
                return this._visibility;
            }
            set {
                this._visibility = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
        
        /// <summary>The creator of the event. Read-only.</summary>
        public class CreatorData {
            
            private string _displayName;
            
            private string _email;
            
            private string _id;
            
            private System.Nullable<bool> _self;
            
            /// <summary>The creator&apos;s name, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this._displayName;
                }
                set {
                    this._displayName = value;
                }
            }
            
            /// <summary>The creator&apos;s email address, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("email")]
            public virtual string Email {
                get {
                    return this._email;
                }
                set {
                    this._email = value;
                }
            }
            
            /// <summary>The creator&apos;s Profile ID, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("self")]
            public virtual System.Nullable<bool> Self {
                get {
                    return this._self;
                }
                set {
                    this._self = value;
                }
            }
        }
        
        /// <summary>Extended properties of the event.</summary>
        public class ExtendedPropertiesData {
            
            private ExtendedPropertiesData.PrivateData _private;
            
            private ExtendedPropertiesData.SharedData _shared;
            
            /// <summary>Properties that are private to the copy of the event that appears on this calendar.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("private")]
            public virtual ExtendedPropertiesData.PrivateData Private {
                get {
                    return this._private;
                }
                set {
                    this._private = value;
                }
            }
            
            /// <summary>Properties that are shared between copies of the event on other attendees&apos; calendars.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("shared")]
            public virtual ExtendedPropertiesData.SharedData Shared {
                get {
                    return this._shared;
                }
                set {
                    this._shared = value;
                }
            }
            
            /// <summary>Properties that are private to the copy of the event that appears on this calendar.</summary>
            public class PrivateData : System.Collections.Generic.Dictionary<string, string> {
            }
            
            /// <summary>Properties that are shared between copies of the event on other attendees&apos; calendars.</summary>
            public class SharedData : System.Collections.Generic.Dictionary<string, string> {
            }
        }
        
        /// <summary>A gadget that extends this event.</summary>
        public class GadgetData {
            
            private string _display;
            
            private System.Nullable<long> _height;
            
            private string _iconLink;
            
            private string _link;
            
            private GadgetData.PreferencesData _preferences;
            
            private string _title;
            
            private string _type;
            
            private System.Nullable<long> _width;
            
            /// <summary>The gadget&apos;s display mode. Optional. Possible values are:  
            ///- &quot;icon&quot; - The gadget displays next to the event&apos;s title in the calendar view. 
            ///- &quot;chip&quot; - The gadget displays when the event is clicked.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("display")]
            public virtual string Display {
                get {
                    return this._display;
                }
                set {
                    this._display = value;
                }
            }
            
            /// <summary>The gadget&apos;s height in pixels. Optional.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("height")]
            public virtual System.Nullable<long> Height {
                get {
                    return this._height;
                }
                set {
                    this._height = value;
                }
            }
            
            /// <summary>The gadget&apos;s icon URL.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("iconLink")]
            public virtual string IconLink {
                get {
                    return this._iconLink;
                }
                set {
                    this._iconLink = value;
                }
            }
            
            /// <summary>The gadget&apos;s URL.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("link")]
            public virtual string Link {
                get {
                    return this._link;
                }
                set {
                    this._link = value;
                }
            }
            
            /// <summary>Preferences.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("preferences")]
            public virtual GadgetData.PreferencesData Preferences {
                get {
                    return this._preferences;
                }
                set {
                    this._preferences = value;
                }
            }
            
            /// <summary>The gadget&apos;s title.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this._title;
                }
                set {
                    this._title = value;
                }
            }
            
            /// <summary>The gadget&apos;s type.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            /// <summary>The gadget&apos;s width in pixels. Optional.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("width")]
            public virtual System.Nullable<long> Width {
                get {
                    return this._width;
                }
                set {
                    this._width = value;
                }
            }
            
            /// <summary>Preferences.</summary>
            public class PreferencesData : System.Collections.Generic.Dictionary<string, string> {
            }
        }
        
        /// <summary>The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in &apos;attendees&apos; with the &apos;organizer&apos; field set to True. To change the organizer, use the &quot;move&quot; operation. Read-only, except when importing an event.</summary>
        public class OrganizerData {
            
            private string _displayName;
            
            private string _email;
            
            private string _id;
            
            private System.Nullable<bool> _self;
            
            /// <summary>The organizer&apos;s name, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this._displayName;
                }
                set {
                    this._displayName = value;
                }
            }
            
            /// <summary>The organizer&apos;s email address, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("email")]
            public virtual string Email {
                get {
                    return this._email;
                }
                set {
                    this._email = value;
                }
            }
            
            /// <summary>The organizer&apos;s Profile ID, if available.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("self")]
            public virtual System.Nullable<bool> Self {
                get {
                    return this._self;
                }
                set {
                    this._self = value;
                }
            }
        }
        
        /// <summary>Information about the event&apos;s reminders for the authenticated user.</summary>
        public class RemindersData {
            
            private System.Collections.Generic.IList<EventReminder> _overrides;
            
            private System.Nullable<bool> _useDefault;
            
            /// <summary>If the event doesn&apos;t use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("overrides")]
            public virtual System.Collections.Generic.IList<EventReminder> Overrides {
                get {
                    return this._overrides;
                }
                set {
                    this._overrides = value;
                }
            }
            
            /// <summary>Whether the default reminders of the calendar apply to the event.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("useDefault")]
            public virtual System.Nullable<bool> UseDefault {
                get {
                    return this._useDefault;
                }
                set {
                    this._useDefault = value;
                }
            }
        }
    }
    
    public class EventAttendee {
        
        private System.Nullable<long> _additionalGuests;
        
        private string _comment;
        
        private string _displayName;
        
        private string _email;
        
        private string _id;
        
        private System.Nullable<bool> _optional;
        
        private System.Nullable<bool> _organizer;
        
        private System.Nullable<bool> _resource;
        
        private string _responseStatus;
        
        private System.Nullable<bool> _self;
        
        /// <summary>Number of additional guests. Optional. The default is 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalGuests")]
        public virtual System.Nullable<long> AdditionalGuests {
            get {
                return this._additionalGuests;
            }
            set {
                this._additionalGuests = value;
            }
        }
        
        /// <summary>The attendee&apos;s response comment. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment {
            get {
                return this._comment;
            }
            set {
                this._comment = value;
            }
        }
        
        /// <summary>The attendee&apos;s name, if available. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this._displayName;
            }
            set {
                this._displayName = value;
            }
        }
        
        /// <summary>The attendee&apos;s email address, if available. This field must be present when adding an attendee.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email {
            get {
                return this._email;
            }
            set {
                this._email = value;
            }
        }
        
        /// <summary>The attendee&apos;s Profile ID, if available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Whether this is an optional attendee. Optional. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optional")]
        public virtual System.Nullable<bool> Optional {
            get {
                return this._optional;
            }
            set {
                this._optional = value;
            }
        }
        
        /// <summary>Whether the attendee is the organizer of the event. Read-only. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizer")]
        public virtual System.Nullable<bool> Organizer {
            get {
                return this._organizer;
            }
            set {
                this._organizer = value;
            }
        }
        
        /// <summary>Whether the attendee is a resource. Read-only. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual System.Nullable<bool> Resource {
            get {
                return this._resource;
            }
            set {
                this._resource = value;
            }
        }
        
        /// <summary>The attendee&apos;s response status. Possible values are:  
        ///- &quot;needsAction&quot; - The attendee has not responded to the invitation. 
        ///- &quot;declined&quot; - The attendee has declined the invitation. 
        ///- &quot;tentative&quot; - The attendee has tentatively accepted the invitation. 
        ///- &quot;accepted&quot; - The attendee has accepted the invitation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseStatus")]
        public virtual string ResponseStatus {
            get {
                return this._responseStatus;
            }
            set {
                this._responseStatus = value;
            }
        }
        
        /// <summary>Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("self")]
        public virtual System.Nullable<bool> Self {
            get {
                return this._self;
            }
            set {
                this._self = value;
            }
        }
    }
    
    public class EventDateTime {
        
        private string _date;
        
        private string _dateTime;
        
        private string _timeZone;
        
        /// <summary>The date, in the format &quot;yyyy-mm-dd&quot;, if this is an all-day event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date")]
        public virtual string Date {
            get {
                return this._date;
            }
            set {
                this._date = value;
            }
        }
        
        /// <summary>The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in &apos;timeZone&apos;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateTime")]
        public virtual string DateTime {
            get {
                return this._dateTime;
            }
            set {
                this._dateTime = value;
            }
        }
        
        /// <summary>The name of the time zone in which the time is specified (e.g. &quot;Europe/Zurich&quot;). Optional. The default is the time zone of the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone {
            get {
                return this._timeZone;
            }
            set {
                this._timeZone = value;
            }
        }
    }
    
    public class EventReminder {
        
        private string _method;
        
        private System.Nullable<long> _minutes;
        
        /// <summary>The method used by this reminder. Possible values are:  
        ///- &quot;email&quot; - Reminders are sent via email. 
        ///- &quot;sms&quot; - Reminders are sent via SMS. 
        ///- &quot;popup&quot; - Reminders are sent via a UI popup.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method {
            get {
                return this._method;
            }
            set {
                this._method = value;
            }
        }
        
        /// <summary>Number of minutes before the start of the event when the reminder should trigger.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minutes")]
        public virtual System.Nullable<long> Minutes {
            get {
                return this._minutes;
            }
            set {
                this._minutes = value;
            }
        }
    }
    
    public class Events : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _accessRole;
        
        private System.Collections.Generic.IList<EventReminder> _defaultReminders;
        
        private string _description;
        
        private string _etag;
        
        private System.Collections.Generic.IList<Event> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private string _summary;
        
        private string _timeZone;
        
        private string _updated;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>The user&apos;s access role for this calendar. Read-only. Possible values are:  
        ///- &quot;none&quot; - The user has no access. 
        ///- &quot;freeBusyReader&quot; - The user has read access to free/busy information. 
        ///- &quot;reader&quot; - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
        ///- &quot;writer&quot; - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
        ///- &quot;owner&quot; - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessRole")]
        public virtual string AccessRole {
            get {
                return this._accessRole;
            }
            set {
                this._accessRole = value;
            }
        }
        
        /// <summary>The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have &apos;reminders.useDefault&apos; set to &apos;true&apos;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultReminders")]
        public virtual System.Collections.Generic.IList<EventReminder> DefaultReminders {
            get {
                return this._defaultReminders;
            }
            set {
                this._defaultReminders = value;
            }
        }
        
        /// <summary>Description of the calendar. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>ETag of the collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of events on the calendar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Event> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Type of the collection (&quot;calendar#events&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token used to access the next page of this result. Omitted if no further results are available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Title of the calendar. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary {
            get {
                return this._summary;
            }
            set {
                this._summary = value;
            }
        }
        
        /// <summary>The time zone of the calendar. Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone {
            get {
                return this._timeZone;
            }
            set {
                this._timeZone = value;
            }
        }
        
        /// <summary>Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this._updated;
            }
            set {
                this._updated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class FreeBusyCalendar {
        
        private System.Collections.Generic.IList<TimePeriod> _busy;
        
        private System.Collections.Generic.IList<Error> _errors;
        
        /// <summary>List of time ranges during which this calendar should be regarded as busy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("busy")]
        public virtual System.Collections.Generic.IList<TimePeriod> Busy {
            get {
                return this._busy;
            }
            set {
                this._busy = value;
            }
        }
        
        /// <summary>Optional error(s) (if computation for the calendar failed).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<Error> Errors {
            get {
                return this._errors;
            }
            set {
                this._errors = value;
            }
        }
    }
    
    public class FreeBusyGroup {
        
        private System.Collections.Generic.IList<string> _calendars;
        
        private System.Collections.Generic.IList<Error> _errors;
        
        /// <summary>List of calendars&apos; identifiers within a group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("calendars")]
        public virtual System.Collections.Generic.IList<string> Calendars {
            get {
                return this._calendars;
            }
            set {
                this._calendars = value;
            }
        }
        
        /// <summary>Optional error(s) (if computation for the group failed).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<Error> Errors {
            get {
                return this._errors;
            }
            set {
                this._errors = value;
            }
        }
    }
    
    public class FreeBusyRequest {
        
        private System.Nullable<long> _calendarExpansionMax;
        
        private System.Nullable<long> _groupExpansionMax;
        
        private System.Collections.Generic.IList<FreeBusyRequestItem> _items;
        
        private string _timeMax;
        
        private string _timeMin;
        
        private string _timeZone;
        
        /// <summary>Maximal number of calendars for which FreeBusy information is to be provided. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("calendarExpansionMax")]
        public virtual System.Nullable<long> CalendarExpansionMax {
            get {
                return this._calendarExpansionMax;
            }
            set {
                this._calendarExpansionMax = value;
            }
        }
        
        /// <summary>Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupExpansionMax")]
        public virtual System.Nullable<long> GroupExpansionMax {
            get {
                return this._groupExpansionMax;
            }
            set {
                this._groupExpansionMax = value;
            }
        }
        
        /// <summary>List of calendars and/or groups to query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<FreeBusyRequestItem> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The end of the interval for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeMax")]
        public virtual string TimeMax {
            get {
                return this._timeMax;
            }
            set {
                this._timeMax = value;
            }
        }
        
        /// <summary>The start of the interval for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeMin")]
        public virtual string TimeMin {
            get {
                return this._timeMin;
            }
            set {
                this._timeMin = value;
            }
        }
        
        /// <summary>Time zone used in the response. Optional. The default is UTC.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone {
            get {
                return this._timeZone;
            }
            set {
                this._timeZone = value;
            }
        }
    }
    
    public class FreeBusyRequestItem {
        
        private string _id;
        
        /// <summary>The identifier of a calendar or a group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
    }
    
    public class FreeBusyResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private FreeBusyResponse.CalendarsData _calendars;
        
        private FreeBusyResponse.GroupsData _groups;
        
        private string _kind;
        
        private string _timeMax;
        
        private string _timeMin;
        
        private Google.Apis.Requests.RequestError _Error;
        
        private string _ETag;
        
        /// <summary>List of free/busy information for calendars.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("calendars")]
        public virtual FreeBusyResponse.CalendarsData Calendars {
            get {
                return this._calendars;
            }
            set {
                this._calendars = value;
            }
        }
        
        /// <summary>Expansion of groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groups")]
        public virtual FreeBusyResponse.GroupsData Groups {
            get {
                return this._groups;
            }
            set {
                this._groups = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#freeBusy&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The end of the interval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeMax")]
        public virtual string TimeMax {
            get {
                return this._timeMax;
            }
            set {
                this._timeMax = value;
            }
        }
        
        /// <summary>The start of the interval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeMin")]
        public virtual string TimeMin {
            get {
                return this._timeMin;
            }
            set {
                this._timeMin = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
        
        /// <summary>List of free/busy information for calendars.</summary>
        public class CalendarsData : System.Collections.Generic.Dictionary<string, FreeBusyCalendar> {
        }
        
        /// <summary>Expansion of groups.</summary>
        public class GroupsData : System.Collections.Generic.Dictionary<string, FreeBusyGroup> {
        }
    }
    
    public class Setting : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private string _value;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>Name of the user setting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Type of the resource (&quot;calendar#setting&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Value of the user setting. The format of the value depends on the ID of the setting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value {
            get {
                return this._value;
            }
            set {
                this._value = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class Settings : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Setting> _items;
        
        private string _kind;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>Etag of the collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of user settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Setting> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Type of the collection (&quot;calendar#settings&quot;).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
    }
    
    public class TimePeriod {
        
        private string _end;
        
        private string _start;
        
        /// <summary>The (exclusive) end of the time period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual string End {
            get {
                return this._end;
            }
            set {
                this._end = value;
            }
        }
        
        /// <summary>The (inclusive) start of the time period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual string Start {
            get {
                return this._start;
            }
            set {
                this._start = value;
            }
        }
    }
}

// NOTE(jsd): The rest of this file which defined the service clients was purposely removed since it is not required.
